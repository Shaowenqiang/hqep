<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 	xmlns:jee="http://www.springframework.org/schema/jee"	xmlns:context="http://www.springframework.org/schema/context"	xmlns:tx="http://www.springframework.org/schema/tx"	xmlns:aop="http://www.springframework.org/schema/aop"	xmlns:mvc="http://www.springframework.org/schema/mvc"	xsi:schemaLocation="http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd     http://www.springframework.org/schema/jee      http://www.springframework.org/schema/jee/spring-jee-4.0.xsd     http://www.springframework.org/schema/context     http://www.springframework.org/schema/context/spring-context-4.0.xsd     http://www.springframework.org/schema/tx     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd     http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd     http://www.springframework.org/schema/mvc      http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">    <context:annotation-config/>	<context:component-scan base-package="com.hqep"></context:component-scan>	<!-- 配置数据库连接池 -->	<bean id="propertyConfigurer"		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">		<property name="locations">			<list>				<value>classpath:com/hqep/conf/properties/dbconfig.properties</value>			</list>		</property>	</bean>	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"		init-method="init" destroy-method="close">		<!-- 数据库初始化start -->		 <property name="driverClassName" value="${driverClassName}" />		<property name="url" value="${url}" />		<property name="username" value="${username}" />		<property name="password" value="${password}" />		<property name="filters" value="config" />        <property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=${publicKey}" />		<property name="maxActive" value="300" />		<property name="minIdle" value="50" />		<property name="maxWait" value="1800000" />	</bean>	<!-- spring和mybatis结合配置 -->	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >		<property name="dataSource" ref="dataSource"/>		<!-- 自动扫描mapping.xml文件 -->		<property name="mapperLocations" value="classpath:com/hqep/conf/mybatis/*.xml"/>		<property name="plugins">			<list>				<bean class="com.github.pagehelper.PageHelper"> 					<property name="properties">						<props>							<prop key="dialect">oracle</prop>						</props>					</property>				</bean>			</list>		</property>	</bean>	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">		<property value="com.hqep.dao" name="basePackage"/>		<property value="sqlSessionFactory" name="sqlSessionFactoryBeanName"/>	</bean>    	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="txManager">		<property name="dataSource" ref="dataSource"/>	</bean>	<!-- 事务策略  -->	<tx:advice id="txAdvice" transaction-manager="txManager">		<tx:attributes>			<tx:method name="save*" rollback-for="java.lang.Exception" propagation="REQUIRED"/>			<tx:method name="delete*" propagation="REQUIRED" no-rollback-for="java.lang.Exception"/>			<tx:method name="update*" rollback-for="java.lang.Exception" propagation="REQUIRED"/>			<tx:method name="*" read-only="true"/>		</tx:attributes>	</tx:advice>	<tx:annotation-driven proxy-target-class="true" transaction-manager="txManager"/></beans>